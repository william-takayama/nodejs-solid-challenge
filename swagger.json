{
  "openapi": "3.0.0",
  "info": {
    "title": "NodeJS S.O.L.I.D. challenge",
    "description": "This is a simple application to study S.O.L.I.D. principles. Based on the OpenAPI 3.0 specification.",
    "contact": {
      "email": "williamstakayama@gmail.com"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3333/",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Everything about users"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a new user",
        "description": "Create a new unique user by checking email",
        "operationId": "createUser",
        "requestBody": {
          "description": "Creates a new user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Joe doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "joe-doe@gmail.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "This email is already in use"
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List all users when an admin user is making the request",
        "operationId": "getUsersList",
        "parameters": [
          {
            "in": "header",
            "name": "user_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Only admin users can list other users"
          }
        }
      }
    },
    "/users/{userId}/admin": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Grant admin access",
        "description": "Grant specific user with admin access",
        "operationId": "grantUserAdminAccess",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId that must be granted with admin access",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId that you need to get info",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Joe doe"
          },
          "admin": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "example": "joe-doe@gmail.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "requestBodies": {
      "User": {
        "description": "User object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      }
    }
  }
}